{"category":"Blynk","color":"#23c48e","blocks":["__Blynk_blynk_init","__Blynk_blynk_run","__Blynk_uptime","__Blynk_slider","__Blynk_push_notification"],"jscode":"// Block __Blynk_blynk_init\nvar __Blynk_blynk_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Blynk init\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"auth_token\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"auth_token\"\n        }\n    ],\n    \"colour\": \"#23c48e\"\n};\n\nwindow['Blockly'].Blocks['__Blynk_blynk_init'] = {\n    init: function() {\n        this.jsonInit(__Blynk_blynk_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__Blynk_blynk_init'] = function(block) {\n    var auth_token = Blockly.Python.valueToCode(block, 'auth_token', Blockly.Python.ORDER_NONE);\n    return `import BlynkLib\nBLYNK_AUTH = ${auth_token}\nblynk = BlynkLib.Blynk(BLYNK_AUTH)\n\n` + \"\\n\";\n};\n\n// Block __Blynk_blynk_run\nvar __Blynk_blynk_run_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Blynk run\"\n        }\n    ],\n    \"colour\": \"#23c48e\"\n};\n\nwindow['Blockly'].Blocks['__Blynk_blynk_run'] = {\n    init: function() {\n        this.jsonInit(__Blynk_blynk_run_json);\n    }\n};\n\nwindow['Blockly'].Python['__Blynk_blynk_run'] = function(block) {\n        return `blynk.run()` + \"\\n\";\n};\n\n// Block __Blynk_uptime\nvar __Blynk_uptime_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Uptime\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"x\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"x\"\n        }\n    ],\n    \"message3\": \"%1 %2\",\n    \"args3\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"y\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"y\"\n        }\n    ],\n    \"message4\": \"%1 %2\",\n    \"args4\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"fg_color\"\n        },\n        {\n            \"type\": \"field_input\",\n            \"text\": \"\",\n            \"spellcheck\": false,\n            \"name\": \"fg_color\"\n        }\n    ],\n    \"message5\": \"%1 %2\",\n    \"args5\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"bg_color\"\n        },\n        {\n            \"type\": \"field_input\",\n            \"text\": \"\",\n            \"spellcheck\": false,\n            \"name\": \"bg_color\"\n        }\n    ],\n    \"colour\": \"#23c48e\"\n};\n\nwindow['Blockly'].Blocks['__Blynk_uptime'] = {\n    init: function() {\n        this.jsonInit(__Blynk_uptime_json);\n    }\n};\n\nwindow['Blockly'].Python['__Blynk_uptime'] = function(block) {\n    var pin = block.getFieldValue('pin');\nvar x = block.getFieldValue('x');\nvar y = block.getFieldValue('y');\nvar fg_color = block.getFieldValue('fg_color');\nvar bg_color = block.getFieldValue('bg_color');\n    return `@blynk.VIRTUAL_READ(${pin})\ndef v${pin}_read_handler():\n    time_val = time.ticks_ms() // 1000\n    blynk.virtual_write(${pin}, time_val)\n    lcd.textClear(${x}, ${y}, '      ', lcd.${bg_color})\n    lcd.print(time_val, ${x}, ${y}, lcd.${fg_color})\n\n` + \"\\n\";\n};\n\n// Block __Blynk_slider\nvar __Blynk_slider_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Slider\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"x\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"x\"\n        }\n    ],\n    \"message3\": \"%1 %2\",\n    \"args3\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"y\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"y\"\n        }\n    ],\n    \"message4\": \"%1 %2\",\n    \"args4\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"fg_color\"\n        },\n        {\n            \"type\": \"field_input\",\n            \"text\": \"\",\n            \"spellcheck\": false,\n            \"name\": \"fg_color\"\n        }\n    ],\n    \"message5\": \"%1 %2\",\n    \"args5\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"bg_color\"\n        },\n        {\n            \"type\": \"field_input\",\n            \"text\": \"\",\n            \"spellcheck\": false,\n            \"name\": \"bg_color\"\n        }\n    ],\n    \"colour\": \"#23c48e\"\n};\n\nwindow['Blockly'].Blocks['__Blynk_slider'] = {\n    init: function() {\n        this.jsonInit(__Blynk_slider_json);\n    }\n};\n\nwindow['Blockly'].Python['__Blynk_slider'] = function(block) {\n    var pin = block.getFieldValue('pin');\nvar x = block.getFieldValue('x');\nvar y = block.getFieldValue('y');\nvar fg_color = block.getFieldValue('fg_color');\nvar bg_color = block.getFieldValue('bg_color');\n    return `@blynk.VIRTUAL_WRITE(${pin})\ndef v${pin}_write_handler(value):\n    lcd.textClear(${x}, ${y}, '    ', lcd.${bg_color})\n    lcd.print('{}'.format(value).strip(\"['']\"), ${x}, ${y}, lcd.${fg_color}, transparent=True, fixedwidth=True)\n\n` + \"\\n\";\n};\n\n// Block __Blynk_push_notification\nvar __Blynk_push_notification_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Push Notification\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"text\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"text\"\n        }\n    ],\n    \"colour\": \"#23c48e\"\n};\n\nwindow['Blockly'].Blocks['__Blynk_push_notification'] = {\n    init: function() {\n        this.jsonInit(__Blynk_push_notification_json);\n    }\n};\n\nwindow['Blockly'].Python['__Blynk_push_notification'] = function(block) {\n    var pin = block.getFieldValue('pin');\nvar text = Blockly.Python.valueToCode(block, 'text', Blockly.Python.ORDER_NONE);\n    return `@blynk.VIRTUAL_WRITE(${pin})\ndef v${pin}_write_handler(value):\n    if value:\n        blynk.notify(${text})\n\n` + \"\\n\";\n};\n\n"}